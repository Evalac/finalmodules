{"mappings":"YACkB,IAAIA,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAcC,KAAKC,SAAW,GACpCC,YAAW,WACLH,GACFF,EAAQ,2BAGIC,EAAP,6B,GACN,I,IAKGK,MAER,SAAqBC,GACnBC,QAAQC,IAAI,gBAAuBC,OAAPH,G,IAG9B,SAAoBI,GAClBH,QAAQC,IAAI,eAAqBC,OAANC,G,IAS7B,IAoCkBC,EApCR,IAAIb,SAAQ,SAACC,EAASC,GAC9B,IAAMC,EAAcC,KAAKC,SAAW,GACpCC,YAAW,WACLH,GACFF,EAAQ,2BAEIC,EAAP,6B,GACN,I,IAGHK,MAAK,SAAAC,GAEL,OADAC,QAAQC,IAAIF,GACL,E,IAEND,MAAK,SAAAO,GAEJ,MADAL,QAAQC,IAAI,EAAII,GACV,IAAIC,MAAM,wB,IAGjBR,MAAK,SAAAS,GACJP,QAAQC,IAAQ,EAAJM,E,IAEbC,OAAM,SAAAL,GAEQH,QAALC,IAAIE,E,IAEbM,SAAQ,WACPT,QAAQC,IAAK,sC,KASCG,EAaR,OAZD,IAAIb,SAAQ,SAACC,EAASC,GAC3B,IACMiB,EAASf,KAAKC,SAAW,GAC/BC,YAAW,WACLa,GACFlB,EAAQ,mBAAqCU,OAALE,IAE7BX,EAAN,gCAA8DS,OAALE,G,GANpD,I,KAYXN,MAMP,SAAuBC,GACrBC,QAAQC,IAAIF,E,IANXS,OASH,SAAsBT,GACpBC,QAAQC,IAAIF,E,IATXU,SAAQ,WACPT,QAAQC,IAAI,0B,IAUjB,CAGC,IAAMU,EAAmB,SAAAC,GACvB,OAAOC,MAAM,qCAAwCX,OAAHU,IAAMd,MAAK,SAAAgB,G,OAAKA,EAAEC,M,KAOtE,SAASC,EAAcC,GACrBjB,QAAQC,IAAIgB,E,CAGd,SAASC,EAAYD,GACnBjB,QAAQC,IAAI,oB,CATdU,EAAiB,GAAGb,KAAKkB,GAAeR,MAAMU,GAC9CP,EAAiB,GAAGb,KAAKkB,GAAeR,MAAMU,GAC9CP,EAAiB,GAAGb,KAAKkB,GAAeR,MAAMU,E,CAcrC,IAAI3B,SAAQ,SAACC,EAASC,GACZE,KAAKC,SAAW,IAG7BJ,EAAQ,yBAESC,EAAZ,yB,IAKRK,MAAK,SAAAC,GACJC,QAAQC,IAAIF,E,IAEbS,OAAM,SAAAL,GACLH,QAAQC,IAAIE,E","sources":["src/js/07-promise.js"],"sourcesContent":["{\n  const promise = new Promise((resolve, reject) => {\n    const canFulfille = Math.random() > 0.5;\n    setTimeout(() => {\n      if (canFulfille) {\n        resolve('promise виконан успішно');\n      }\n\n      reject('Promise виконан з помилкою');\n    }, 1000);\n  });\n\n  // console.log(promise);\n\n  promise.then(onFulfilled, onRejected);\n\n  function onFulfilled(result) {\n    console.log(`onFulfilled: ${result}`);\n  }\n\n  function onRejected(error) {\n    console.log(`onRejected: ${error}`);\n  }\n}\n\n{\n  /*\n   * ланцюжки промісів\n   */\n\n  const p = new Promise((resolve, reject) => {\n    const canFulfille = Math.random() > 0.5;\n    setTimeout(() => {\n      if (canFulfille) {\n        resolve('promise виконан успішно');\n      }\n      reject('promise виконан з помилкою');\n    }, 2000);\n  });\n\n  p.then(result => {\n    console.log(result);\n    return 10;\n  })\n    .then(x => {\n      console.log(2 * x);\n      throw new Error('помилка в другом then'); // кидає помилку і наступні зен не виконуюються\n      return 50;\n    })\n    .then(y => {\n      console.log(y * 2);\n    })\n    .catch(error => {\n      // ловить помилки\n      console.log(error);\n    })\n    .finally(() => {\n      console.log(`я буду виконан в будь якому випадку`);\n    }); // це для того щоб закри ти проміс\n}\n\n{\n  /*\n   * промісифікація функцій\n   */\n\n  const makeOrder = dish => {\n    return new Promise((resolve, reject) => {\n      const DELAY = 3000;\n      const passed = Math.random() > 0.5;\n      setTimeout(() => {\n        if (passed) {\n          resolve(`Ось Ваша страва ${dish}`);\n        }\n        reject(`Перепрошую цієї страви немає ${dish}`);\n      }, DELAY);\n    });\n  };\n\n  makeOrder('Борщ')\n    .then(onSuccesOrder)\n    .catch(onErrorOrder)\n    .finally(() => {\n      console.log('Бажаэете що не буть ще?');\n    });\n\n  function onSuccesOrder(result) {\n    console.log(result);\n  }\n\n  function onErrorOrder(result) {\n    console.log(result);\n  }\n}\n\n{\n  const fecthPokemonById = id => {\n    return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then(r => r.json()); // повертає проміс тільки з виконаним результатом\n  };\n\n  fecthPokemonById(1).then(onSuccsesPoke).catch(onErrorPoke);\n  fecthPokemonById(2).then(onSuccsesPoke).catch(onErrorPoke);\n  fecthPokemonById(3).then(onSuccsesPoke).catch(onErrorPoke);\n\n  function onSuccsesPoke(pokemon) {\n    console.log(pokemon);\n  }\n\n  function onErrorPoke(pokemon) {\n    console.log('Цей в блоці catch');\n  }\n}\n\n{\n  //Заключенння для остаточного засвоення промісів\n  const makePromise = () => {\n    return new Promise((resolve, reject) => {\n      const passed = Math.random() > 0.5;\n\n      if (passed) {\n        resolve('Куку проміс виконався');\n      }\n      reject('Проміс спіймав помилку');\n    });\n  };\n\n  makePromise()\n    .then(result => {\n      console.log(result);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["Promise","resolve","reject","canFulfille","Math","random","setTimeout","then","result","console","log","concat","error","dish","x","Error","y","catch","finally","passed","$91024673632ca702$var$fecthPokemonById","id","fetch","r","json","$91024673632ca702$var$onSuccsesPoke","pokemon","$91024673632ca702$var$onErrorPoke"],"version":3,"file":"07-promise.e4a8f129.js.map"}