{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_super_prop_base.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_get.js","node_modules/bootstrap.native/node_modules/.pnpm/@thednp+shorty@2.0.0/node_modules/@thednp/shorty/dist/shorty.mjs","node_modules/bootstrap.native/node_modules/.pnpm/@thednp+event-listener@2.0.4/node_modules/@thednp/event-listener/dist/event-listener.mjs","node_modules/bootstrap.native/src/strings/fadeClass.ts","node_modules/bootstrap.native/src/strings/showClass.ts","node_modules/bootstrap.native/src/strings/dataBsDismiss.ts","node_modules/bootstrap.native/src/strings/alertString.ts","node_modules/bootstrap.native/src/strings/alertComponent.ts","node_modules/bootstrap.native/src/components/base-component.ts","node_modules/bootstrap.native/src/components/alert.ts","node_modules/bootstrap.native/src/strings/activeClass.ts","node_modules/bootstrap.native/src/strings/dataBsToggle.ts","node_modules/bootstrap.native/src/strings/buttonComponent.ts","node_modules/bootstrap.native/src/components/button.ts","node_modules/bootstrap.native/src/strings/buttonString.ts","node_modules/bootstrap.native/src/strings/dataBsTarget.ts","node_modules/bootstrap.native/src/strings/carouselString.ts","node_modules/bootstrap.native/src/strings/carouselComponent.ts","node_modules/bootstrap.native/src/strings/dataBsParent.ts","node_modules/bootstrap.native/src/util/getTargetElement.ts","node_modules/bootstrap.native/src/strings/dataBsContainer.ts","node_modules/bootstrap.native/src/components/carousel.ts","node_modules/bootstrap.native/src/strings/collapsingClass.ts","node_modules/bootstrap.native/src/strings/collapseString.ts","node_modules/bootstrap.native/src/strings/collapseComponent.ts","node_modules/bootstrap.native/src/components/collapse.ts","node_modules/bootstrap.native/src/strings/dropdownClasses.ts","node_modules/bootstrap.native/src/strings/dropdownComponent.ts","node_modules/bootstrap.native/src/strings/dropdownMenuClass.ts","node_modules/bootstrap.native/src/util/isEmptyAnchor.ts","node_modules/bootstrap.native/src/components/dropdown.ts","node_modules/bootstrap.native/src/strings/modalString.ts","node_modules/bootstrap.native/src/strings/modalComponent.ts","node_modules/bootstrap.native/src/strings/offcanvasComponent.ts","node_modules/bootstrap.native/src/strings/stickyTopClass.ts","node_modules/bootstrap.native/src/strings/positionStickyClass.ts","node_modules/bootstrap.native/src/util/scrollbar.ts","node_modules/bootstrap.native/src/strings/fixedTopClass.ts","node_modules/bootstrap.native/src/strings/fixedBottomClass.ts","node_modules/bootstrap.native/src/strings/offcanvasString.ts","node_modules/bootstrap.native/src/util/popupContainer.ts","node_modules/bootstrap.native/src/util/backdrop.ts","node_modules/bootstrap.native/src/util/isVisible.ts","node_modules/bootstrap.native/src/components/modal.ts","node_modules/bootstrap.native/src/components/offcanvas.ts","node_modules/bootstrap.native/src/strings/popoverString.ts","node_modules/bootstrap.native/src/strings/popoverComponent.ts","node_modules/bootstrap.native/src/strings/tooltipString.ts","node_modules/bootstrap.native/src/util/getTipTemplate.ts","node_modules/bootstrap.native/src/util/tipClassPositions.ts","node_modules/bootstrap.native/src/util/styleTip.ts","node_modules/bootstrap.native/src/util/tooltipDefaults.ts","node_modules/bootstrap.native/src/strings/dataOriginalTitle.ts","node_modules/bootstrap.native/src/strings/tooltipComponent.ts","node_modules/bootstrap.native/src/util/setHtml.ts","node_modules/bootstrap.native/src/components/tooltip.ts","node_modules/bootstrap.native/src/util/getElementContainer.ts","node_modules/bootstrap.native/src/util/createTip.ts","node_modules/bootstrap.native/src/components/popover.ts","node_modules/bootstrap.native/src/strings/scrollspyString.ts","node_modules/bootstrap.native/src/strings/scrollspyComponent.ts","node_modules/bootstrap.native/src/components/scrollspy.ts","node_modules/bootstrap.native/src/strings/tabString.ts","node_modules/bootstrap.native/src/components/tab.ts","node_modules/bootstrap.native/src/strings/tabComponent.ts","node_modules/bootstrap.native/src/strings/toastString.ts","node_modules/bootstrap.native/src/strings/toastComponent.ts","node_modules/bootstrap.native/src/components/toast.ts","node_modules/bootstrap.native/src/util/init.ts","src/js/04-subscraption.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    /* istanbul ignore else */\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    /* istanbul ignore else */\n    if (controls.length) {\n      controls.forEach(arrow => {\n        /* istanbul ignore else */\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    /* istanbul ignore else */\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n  MouseEvent,\n  KeyboardEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget ? getModalInstance(currentTarget) : null;\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    // const callback = () => setTimeout(() => super.dispose(), 17);\n    const callback = () => super.dispose();\n    this._toggleEventListeners();\n\n    this.hide();\n\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n    // let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    this._toggleEventListeners();\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => this._toggleEventListeners());\n      } else {\n        this._toggleEventListeners();\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    /* istanbul ignore else */\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        /* istanbul ignore else */\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          /* istanbul ignore else */\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          /* istanbul ignore else */\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          /* istanbul ignore else */\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        /* istanbul ignore else */\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  self._toggleEventListeners();\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    /* istanbul ignore else */\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    /* istanbul ignore else */\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n","import { Modal } from 'bootstrap.native';\nconst modal = new Modal('#staticBackdrop');\n\nconst PROMPT_DALLY = 1000;\nconst MAX_PROMPT_ATTEMPS = 3;\nlet pormptCounetr = 0;\nlet hasSubscripe = false;\n\nconst refs = {\n  modal: document.querySelector('#staticBackdrop'),\n  subscribeBtn: document.querySelector('button[data-subscraption]'),\n};\nconsole.log(refs.subscribeBtn);\n\nopenSpamModal();\n\nrefs.modal.addEventListener('hide.bs.modal', openSpamModal);\nrefs.subscribeBtn.addEventListener('click', onSubBtnClick);\n\nfunction openSpamModal() {\n  if (pormptCounetr === MAX_PROMPT_ATTEMPS || hasSubscripe) {\n    console.log('Max click close or subscripe');\n    return;\n  }\n  setTimeout(() => {\n    console.log('Open modal');\n    modal.show();\n    pormptCounetr += 1;\n  }, PROMPT_DALLY);\n}\n\nfunction onSubBtnClick() {\n  hasSubscripe = true;\n  modal.hide();\n}\n\n// {\n\n//\n\n//   const inervalId = setInterval(() => {\n//     if (pormptCounetr === MAX_PROMPT_ATTEMPS || hasSubscripe) {\n//       clearInterval(inervalId);\n//       return;\n//     }\n//     console.log(`Subscripe Now - ` + Date.now());\n//     pormptCounetr += 1;\n//     console.log(pormptCounetr);\n//   }, PROMPT_DALLY);\n// }\n\n// console.log(modal);\n// console.log(BSN);\n"],"names":["Object","defineProperty","module","exports","value","default","object","property","prototype","hasOwnProperty","call","$1b88cb4cd4b28de3$var$_getPrototypeOf","obj","parcelRequire","__esModule","$665014edacbfe17b$exports","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","$e08672c9889dd930$exports","receiver","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","target1","property1","receiver1","Reflect","get","base","desc","getOwnPropertyDescriptor","$6332dc3ea9a0ae64$var$_Object","fe","ge","Ee","ye","we","Ae","$","_","tt","st","it","lt","mt","ft","Ct","zt","Vt","Re","Qe","je","qe","$e","C","U","A","navigator","userAgentData","S","userAgent","z","brands","some","t","test","brand","x","vn","includes","$6332dc3ea9a0ae64$var$Re","document","head","N","style","Xt","e","n","o","s","r","currentTarget","apply","removeEventListener","Jt","addEventListener","Gt","Kt","Yt","getAttribute","kn","hasAttribute","Tn","setAttribute","Cn","removeAttribute","Ln","_classList","classList","add","$parcel$interopDefault","$8nrFW","In","remove","zn","contains","v","nodeType","u","E","Map","L","data","set","has","getAllFor","delete","size","Hn","k","W","constructor","name","R","d","ownerDocument","window","M","assign","concat","Zt","createElement","tagName","$dDDEV","Q","dispatchEvent","g","getComputedStyle","replace","toLowerCase","getPropertyValue","ne","parseFloat","Number","isNaN","Un","Event","ee","a","l","setTimeout","Qn","focus","V","w","entries","oe","Gn","keys","Xn","CustomEvent","cancelable","bubbles","Yn","passive","Zn","offsetHeight","$n","forEach","param","_param","setProperty","I","f","_n","se","clearTimeout","h","ref","getBoundingClientRect","width","height","top","right","c","bottom","left","p","offsetWidth","m","Math","round","y","eo","body","T","documentElement","ce","so","nodeName","assignedSlot","parentNode","host","B","H","b","ae","id","ro","defaultView","uo","clientHeight","yo","dir","Ao","le","closest","getRootNode","So","querySelector","de","getElementsByTagName","Mo","querySelectorAll","To","getElementsByClassName","Do","matches","type","param1","_param1","once","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","$6332dc3ea9a0ae64$var$nt","BaseComponent","config","__publicField","this","element","isString","Error","prevInstance","Data","_toggleEventListeners","options","defaults","ObjectKeys","dataset","j","normalizeOptions","prop","_this","alertSelector","alertDismissSelector","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispose","$6332dc3ea9a0ae64$export$caec2af78bcc877f","Alert","nt","_$e","$ds8z5","hasClass","defaultPrevented","removeClass","emulateTransitionEnd","action","addListener","removeListener","dismiss","close","mouseclickEvent","$fVNic","getInstance","activeClass","dataBsToggle","buttonComponent","buttonSelector","buttonString","$6332dc3ea9a0ae64$export$353f5b6fc5456de1","Button","preventDefault","isActive","addClass","ariaPressed","toggle","n2","String","dataBsTarget","carouselString","carouselComponent","dataBsParent","getTargetElement","targetAttr","doc","getDocument","map","att","attValue","filter","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","pause","keyboard","touch","interval","getCarouselInstance","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","isAnimating","activeItem","getActiveIndex","orientation","directionClass","Timer","cycle","hidden","isPaused","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","to","carouselControlsHandler","next","prev","carouselKeyHandler","code","$1t1Wn","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","isTouch","indicator","controls","stopImmediatePropagation","stopPropagation","carouselPointerDownHandler","indicators","every","el","pageX","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","find","i2","getSelection","toString","abs","activateCarouselIndicator","passiveHandler","isHTMLElement","indexOf","$6332dc3ea9a0ae64$export$144901db2ea8e967","Carousel","_$n","mouseenterEvent","mouseleaveEvent","touchstartEvent","arrow","keydownEvent","o1","i3","activeIndex","transitionItem","ar","r1","idx","eventProperties","relatedTarget","from","ObjectAssign","getElementTransitionDuration","reflow","_this1","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","parent","getCollapseInstance","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","collapseContent","triggers","noop","setElementStyle","scrollHeight","btn","ariaExpanded","collapseClickHandler","trigger","$6332dc3ea9a0ae64$export$78768a9af065a7b","Collapse","ref7","o2","i4","activeCollapse","activeCollapseInstance","expandCollapse","hide","show","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","slice","dropdownClasses","dropdownString","dropupString","dropstartString","dropendString","dropdownSelector","getDropdownInstance","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","offset","display","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","getElementStyle","menuEnd","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","D","getDocumentElement","q","clientWidth","Y","Bt","leftFullExceed","targetLeft","menuWidth","rightFullExceed","targetWidth","bottomExceed","targetTop","menuHeight","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","margin","join","toggleDropdownDismiss","open","dropdownDismissHandler","focusEvent","dropdownPreventScroll","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","children","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","menuItems","firstElementChild","getMenuItems","keyEscape","$6332dc3ea9a0ae64$export$931cbfb6bfb85fc","Dropdown","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","stickyTopClass","positionStickyClass","getFixedItems","measureScrollbar","innerWidth","setScrollbar","overflow","bd","getDocumentBody","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","offcanvasString","popupContainer","className","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","append","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","resetScrollbar","isVisible","offsetParent","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","backdrop","getModalInstance","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","modalOverflow","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","focusElement","afterModalShow","beforeModalShow","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","_b","isStatic","modalDialog","selectedText","targetInsideDialog","staticTransitionEnd","duration","$6332dc3ea9a0ae64$export$2b77a92f1a5ad772","Modal","o3","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","scroll","getOffcanvasInstance","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","setOffCanvasScrollbar","visibility","showOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","hideOffcanvasComplete","visibleTrigger","$6332dc3ea9a0ae64$export$591ca0244c9dfcd4","Offcanvas","o4","blur","beforeOffcanvasHide","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","tipClassPositions","styleTip","tooltip","container","tipPositions","isPopover","placement","fixedParent","parentCWidth","parentOWidth","htmlcw","htmlow","leftBoundry","rightBoundry","Rt","pt","ref12","elemRectLeft","elemRectTop","ut","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","tipHeight","elemHeight","htmlch","tipWidth","elemWidth","horizontals","verticals","tipClasses","elemRectRight","updatedTooltipEvent","tooltipDefaults","template","title","customClass","sanitizeFn","animation","content","dismissible","btnClose","dataOriginalTitle","tooltipComponent","setHtml","dirty","trim","isFunction","tempDocument","DOMParser","parseFromString","childNodes","isNodeList","Array","isArray","tooltipSelector","titleAttr","getTooltipInstance","hasTip","toggleTooltipAction","handleTouch","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","ariaDescribedBy","removeTooltip","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","win","scrollTarget","handleHide","toggleTooltipTitle","titleAtt","$6332dc3ea9a0ae64$export$28c660c63b792dea","Tooltip","enabled","split","tr","handleShow","focusinEvent","focusoutEvent","isApple","handleFocus","o5","tipString","tipComponent","elem","getUID","majorBlockTags","containers","getParentNode","isShadowRoot","isTableElement","push","getElementContainer","position","titleParts","contentParts","tooltipTemplate","placementClass","htmlMarkup","firstChild","cloneNode","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","createTip","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","disable","enable","disposeTooltipComplete","popoverSelector","popoverDefaults","$6332dc3ea9a0ae64$export$5b6b19405a83ff9d","Popover","Dt","scrollspyComponent","scrollspyDefaults","activateScrollSpy","getScrollHeight","getOffsetHeight","isWindow","innerHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","previousElementSibling","$6332dc3ea9a0ae64$export$a6472a5298a374be","ScrollSpy","href","targetItem","rect","itemsLength","isWin","links","scrollHEIGHT","scrollTop","scrollY","items","offsets","maxScroll","link","charAt","offsetTop","updateSpyTargets","ref15","newActiveItem","$l5bVx","refresh","ref17","o6","i7","tabString","tabSelector","getTabInstance","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","tab","nextContent","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","tabClickHandler","$6332dc3ea9a0ae64$export$3e41faf802a29e71","Tab","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","autohide","getToastInstance","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","toastClickHandler","interactiveToastHandler","$6332dc3ea9a0ae64$export$8d8dc7d5f743331b","Toast","isShown","showToast","hideToast","ref21","o7","i8","componentsList","initCallback","context","lookUp","elemCollection","cs","init","selector","collection","initComponentDataAPI","$38a8f112a547b14a$var$modal","$38a8f112a547b14a$var$pormptCounetr","$38a8f112a547b14a$var$hasSubscripe","$38a8f112a547b14a$var$refs","modal","subscribeBtn","$38a8f112a547b14a$var$openSpamModal","console","log"],"version":3,"file":"04-subscraption.2cdb3daf.js.map"}