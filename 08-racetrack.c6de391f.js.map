{"mappings":"AAAA,MAAMA,EAAS,CAAC,aAAc,UAAW,SAAU,SAAU,cAEvDC,EAAO,CACXC,QAASC,SAASC,cAAc,gBAChCC,OAAQF,SAASC,cAAc,WAC/BE,SAAUH,SAASC,cAAc,aACjCG,YAAaJ,SAASC,cAAc,sBAEtC,IAAII,EAAc,EA2BlB,SAASC,EAAkBC,GACzBT,EAAKI,OAAOM,YAAcD,C,CAG5B,SAASE,EAAoBF,GAC3BT,EAAKK,SAASK,YAAcD,C,CA9B9BT,EAAKC,QAAQW,iBAAiB,SAAS,KACrC,MAAMC,EAAWd,EAAOe,KAAIC,GAsC9B,SAAaA,GACX,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,GAQYC,EARQ,IAQHC,EARS,KAS3BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADtD,IAAsBA,EAAKC,EANvBI,YAAW,KACTR,EAAQ,C,MAAEF,E,KAAOI,GAAO,GACvBA,EAAK,G,CA5C2BO,CAAIX,KACzCR,GAAe,EAEfC,IACAG,EAAoB,uCAYtB,SAAyBE,GAEgCG,QAA/CW,KAAKd,GAAUe,MAAK,EAACb,MAAEA,EAAKI,KAAEA,MACpCX,EAAkB,WAACO,mBAAuBI,UAa9C,UAA4BJ,MAAEA,EAAKI,KAAEA,EAAMU,YAAAC,IACzC,MAAMC,EAAK,WAAWD,aAAuBf,aAAiBI,cAE9DnB,EAAKM,YAAY0B,mBAAmB,YAAaD,E,CAfzBE,CAAH,C,MAAElB,E,KAAOI,E,YAAMZ,GAAc,G,CAfnB2B,CAAfrB,GAIlB,SAA0BA,GAEUG,QAA1BmB,IAAItB,GAAUe,MAAKQ,IACzBzB,EAAoB,mCAAC,G,CANvB0B,CAAiBxB,EAAS","sources":["src/js/08-racetrack.js"],"sourcesContent":["const horses = ['Secretarit', 'Eclipse', 'Bullet', 'Rocket', 'Flying Fox'];\n\nconst refs = {\n  raceBtn: document.querySelector('.js-race-btn'),\n  winner: document.querySelector('.winner'),\n  progress: document.querySelector('.progress'),\n  resultTable: document.querySelector('.js-results-table'),\n};\nlet raceCounter = 0;\n\nrefs.raceBtn.addEventListener('click', () => {\n  const promises = horses.map(horse => run(horse));\n  raceCounter += 1;\n\n  updateWinnerField();\n  updateProgressField(`Заїзд почався ставки не приймаються`);\n  determineWinner(promises);\n  waitForAllHorses(promises);\n});\n\nfunction waitForAllHorses(promises) {\n  //Promise.all() повертає масив всіх виконаних промісів\n  Promise.all(promises).then(x => {\n    updateProgressField(`Заїзд закінчен, приймаємо ставки`);\n  });\n}\n\nfunction determineWinner(promises) {\n  //Promise.race();  цей метод промісу повертає проміс який виконався швидше за інших\n  Promise.race(promises).then(({ horse, time }) => {\n    updateWinnerField(`Переміг ${horse}, фінішував за ${time} часу`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\nfunction updateWinnerField(message) {\n  refs.winner.textContent = message;\n}\n\nfunction updateProgressField(message) {\n  refs.progress.textContent = message;\n}\n\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n\n  refs.resultTable.insertAdjacentHTML('beforeend', tr); // помилка із за цього(треба розібратись чтому не иалюється таблиця ((закінчив на 1:52)))\n}\n\nfunction run(horse) {\n  return new Promise((resolve, reject) => {\n    const time = getRanomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\nfunction getRanomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"names":["$c50c6b8da290b78f$var$horses","$c50c6b8da290b78f$var$refs","raceBtn","document","querySelector","winner","progress","resultTable","$c50c6b8da290b78f$var$raceCounter","$c50c6b8da290b78f$var$updateWinnerField","message","textContent","$c50c6b8da290b78f$var$updateProgressField","addEventListener","promises","map","horse","Promise","resolve","reject","time","min","max","Math","floor","random","setTimeout","$c50c6b8da290b78f$var$run","race","then","raceCounter","raceCounter1","tr","insertAdjacentHTML","$c50c6b8da290b78f$var$updateResultsTable","$c50c6b8da290b78f$var$determineWinner","all","x","$c50c6b8da290b78f$var$waitForAllHorses"],"version":3,"file":"08-racetrack.c6de391f.js.map"}