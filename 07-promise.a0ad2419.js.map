{"mappings":"AACkB,IAAIA,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAcC,KAAKC,SAAW,GACpCC,YAAW,KACLH,GACFF,EAAQ,2BAGIC,EAAP,6BAA6C,GACnD,IAAK,IAKFK,MAER,SAAqBC,GACnBC,QAAQC,IAAI,gBAAgBF,I,IAG9B,SAAoBG,GAClBF,QAAQC,IAAI,eAAeC,I,IASnB,IAAIX,SAAQ,CAACC,EAASC,KAC9B,MAAMC,EAAcC,KAAKC,SAAW,GACpCC,YAAW,KACLH,GACFF,EAAQ,2BAEIC,EAAP,6BAA6C,GACnD,IAAK,IAGRK,MAAKC,IACLC,QAAQC,IAAIF,GACL,MAEND,MAAKK,IAEJ,MADAH,QAAQC,IAAI,EAAIE,GACV,IAAIC,MAAM,wBAAsC,IAGvDN,MAAKO,IACJL,QAAQC,IAAQ,EAAJI,EAAM,IAEnBC,OAAMJ,IAEQF,QAALC,IAAIC,EAAM,IAEnBK,SAAQ,KACPP,QAAQC,IAAI,sCAAC,IASC,CAAAO,GACT,IAAIjB,SAAQ,CAACC,EAASC,KAC3B,MACMgB,EAASd,KAAKC,SAAW,GAC/BC,YAAW,KACLY,GACFjB,EAAQ,mBAACgB,KAEEf,EAAN,gCAACe,IAAA,GANI,IAOL,IAIbE,CAAU,QACHZ,MAMP,SAAuBC,GACrBC,QAAQC,IAAIF,E,IANXO,OASH,SAAsBP,GACpBC,QAAQC,IAAIF,E,IATXQ,SAAQ,KACPP,QAAQC,IAAI,0BAA4C,IAU7D,CAGC,MAAMU,EAAmBC,GAChBC,MAAM,qCAAqCD,KAAMd,MAAKgB,GAAKA,EAAEC,SAOtE,SAASC,EAAcC,GACrBjB,QAAQC,IAAIgB,E,CAGd,SAASC,EAAYD,GACnBjB,QAAQC,IAAI,oB,CATdU,EAAiB,GAAGb,KAAKkB,GAAeV,MAAMY,GAC9CP,EAAiB,GAAGb,KAAKkB,GAAeV,MAAMY,GAC9CP,EAAiB,GAAGb,KAAKkB,GAAeV,MAAMY,E,CAa1B,KACX,IAAI3B,SAAQ,CAACC,EAASC,KACZE,KAAKC,SAAW,IAG7BJ,EAAQ,yBAESC,EAAZ,yBAAyB,IAIpC0B,GACGrB,MAAKC,IACJC,QAAQC,IAAIF,EAAO,IAEpBO,OAAMJ,IACLF,QAAQC,IAAIC,EAAM","sources":["src/js/07-promise.js"],"sourcesContent":["{\n  const promise = new Promise((resolve, reject) => {\n    const canFulfille = Math.random() > 0.5;\n    setTimeout(() => {\n      if (canFulfille) {\n        resolve('promise виконан успішно');\n      }\n\n      reject('Promise виконан з помилкою');\n    }, 1000);\n  });\n\n  // console.log(promise);\n\n  promise.then(onFulfilled, onRejected);\n\n  function onFulfilled(result) {\n    console.log(`onFulfilled: ${result}`);\n  }\n\n  function onRejected(error) {\n    console.log(`onRejected: ${error}`);\n  }\n}\n\n{\n  /*\n   * ланцюжки промісів\n   */\n\n  const p = new Promise((resolve, reject) => {\n    const canFulfille = Math.random() > 0.5;\n    setTimeout(() => {\n      if (canFulfille) {\n        resolve('promise виконан успішно');\n      }\n      reject('promise виконан з помилкою');\n    }, 2000);\n  });\n\n  p.then(result => {\n    console.log(result);\n    return 10;\n  })\n    .then(x => {\n      console.log(2 * x);\n      throw new Error('помилка в другом then'); // кидає помилку і наступні зен не виконуюються\n      return 50;\n    })\n    .then(y => {\n      console.log(y * 2);\n    })\n    .catch(error => {\n      // ловить помилки\n      console.log(error);\n    })\n    .finally(() => {\n      console.log(`я буду виконан в будь якому випадку`);\n    }); // це для того щоб закри ти проміс\n}\n\n{\n  /*\n   * промісифікація функцій\n   */\n\n  const makeOrder = dish => {\n    return new Promise((resolve, reject) => {\n      const DELAY = 3000;\n      const passed = Math.random() > 0.5;\n      setTimeout(() => {\n        if (passed) {\n          resolve(`Ось Ваша страва ${dish}`);\n        }\n        reject(`Перепрошую цієї страви немає ${dish}`);\n      }, DELAY);\n    });\n  };\n\n  makeOrder('Борщ')\n    .then(onSuccesOrder)\n    .catch(onErrorOrder)\n    .finally(() => {\n      console.log('Бажаэете що не буть ще?');\n    });\n\n  function onSuccesOrder(result) {\n    console.log(result);\n  }\n\n  function onErrorOrder(result) {\n    console.log(result);\n  }\n}\n\n{\n  const fecthPokemonById = id => {\n    return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then(r => r.json()); // повертає проміс тільки з виконаним результатом\n  };\n\n  fecthPokemonById(1).then(onSuccsesPoke).catch(onErrorPoke);\n  fecthPokemonById(2).then(onSuccsesPoke).catch(onErrorPoke);\n  fecthPokemonById(3).then(onSuccsesPoke).catch(onErrorPoke);\n\n  function onSuccsesPoke(pokemon) {\n    console.log(pokemon);\n  }\n\n  function onErrorPoke(pokemon) {\n    console.log('Цей в блоці catch');\n  }\n}\n\n{\n  //Заключенння для остаточного засвоення промісів\n  const makePromise = () => {\n    return new Promise((resolve, reject) => {\n      const passed = Math.random() > 0.5;\n\n      if (passed) {\n        resolve('Куку проміс виконався');\n      }\n      reject('Проміс спіймав помилку');\n    });\n  };\n\n  makePromise()\n    .then(result => {\n      console.log(result);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["Promise","resolve","reject","canFulfille","Math","random","setTimeout","then","result","console","log","error","x","Error","y","catch","finally","dish","passed","makeOrder","fecthPokemonById","id","fetch","r","json","$939ffef877fffcc9$var$onSuccsesPoke","pokemon","$939ffef877fffcc9$var$onErrorPoke","makePromise"],"version":3,"file":"07-promise.a0ad2419.js.map"}